my notes commands 
my commands notes
ssh-add ~/.ssh/aws-prod-k8s  #for adding the keys
ssh-add -l  ##for looking for added keys
sudo apt update && sudo apt dist-upgrade ## #for updating everything
fdisk -l  # #for checking for disk
firewall-cmd --zone=public --add-port=80/tcp  ##opening port
firewall-cmd --permanent --zone=public --add-port=80/tcp  ##permanent
curl localhost:200/metrics # for checking metrics
scp 172.30.0.239:zim* /mnt/c/Users/Zimisele/OpenVPN/config/ ## for going to my computer directory
less /var/log/rabbitmq/rabbit@oneRabbit.log ---looking for logs for checking logs
:%s/the name you want to change/name you want it to change to  ## when you change the name on VI
ps -aux | grep docker for greping 
grep Mem /proc/meminfo ## for checking memory 
netstat -tulpn | grep LISTEN ## for checking the open ports
ncat -v smtp.gmail.com 587 ## for checking connection to the port
cat -n mongobackup.sh ## for checking folder with number
service vmware-sps status (Check the status of the service)
service vmware-sps start (Start the service if it is stopped)
docker exec -it dockerContainer bash ##for entering on docker
KUBECONFIG=/etc/kubernetes/admin.conf kubectl get nodes ## when you get this Error/The connection to the server localhost:8080 was refused - did you specify the right host or port?
mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config
kubectl get -n kube-logging statefulset for statefulSet deployments
kubectl scale statefulset es-cluster -n kube-logging --replicas=0
##creating user
sudo adduser username
sudo usermod -aG sudo username


## when you expend partition on ubuntu ec2 aws
   fdisk -l
   lsblk
   growpart /dev/xvda 1

##opening ports on Vms
ufw status
ufw enable
ufw allow port no /tcp
ufw reload

## To change hostname on Vms
- nmtui
- exec bash

tcpdump -s 0 -vv -X 'tcp dst port 443' -w azuretest.pcap ##when you checking dump
curl https://iotnxt.azurecr.io -v ##when you testing URL 
openssl s_client -connect 127.0.0.1:5671 ##when you testing the certificates
nmap IP address of the server to check open ports

#git commands line
git init
git add -A
git commit -m 'Added my project'
git remote add origin git@github.com:scotch-io/my-new-project.git
git push -u -f origin master
git config --global user.email "zimisele9@gmail.com"
git config --global user.name "zimisele9@gmail.com"
git remote set-url origin https://github.com/your/repository